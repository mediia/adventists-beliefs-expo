{"version":3,"sources":["src/shared/NavigationBar.js","src/data/queries.js","src/data/glitch.js","src/data/useData.js","src/shared/RootSurface.js","src/home/BeliefImage.js","src/home/Belief.js","src/home/Doctrine.js","src/home/HomeScreen.js","src/belief/BeliefImage.js","src/belief/Declaration.js","src/belief/BeliefScreen.js","App.js"],"names":["NavigationBar","navigation","previous","scene","Appbar","Header","BackAction","onPress","goBack","Content","title","descriptor","options","glitch","HOME","gql","BELIEF","useData","query","variables","useQuery","queries","RootSurface","children","colors","useTheme","View","style","styles","container","backgroundColor","background","StatusBar","StyleSheet","create","flex","BeliefImage","belief","Image","source","uri","image","height","width","borderRadius","Belief","useNavigation","Item","left","navigate","Doctrine","doctrine","Section","Subheader","toUpperCase","beliefs","map","key","_id","Home","loading","error","data","ScrollView","Text","message","doctrines","Dimensions","get","Declaration","declaration","Card","Paragraph","text","BeliefScreen","theme","route","params","declarationsContainer","declarations","padding","client","ApolloClient","cache","InMemoryCache","Stack","createStackNavigator","App","NavigationContainer","Navigator","initialRouteName","screenOptions","header","props","Screen","name","component","HomeScreen"],"mappings":"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","file":"static/js/app.549ac4b2.chunk.js","sourcesContent":["import React from 'react'\nimport { Appbar } from 'react-native-paper'\n\nexport default function NavigationBar({ navigation, previous, scene }) {\n\n  return (\n    <Appbar.Header>\n      {previous ? <Appbar.BackAction onPress={navigation.goBack} /> : null}\n      <Appbar.Content title={scene.descriptor.options.title} />\n    </Appbar.Header>\n  );\n}\n","import glitch from './glitch'\n\nexport default glitch\n","import { gql } from '@apollo/client'\n\nconst HOME = gql`\n  query {\n    doctrines {\n      _id\n      order\n      title\n      beliefs {\n        _id\n        order\n        title\n        image\n      }\n    }\n  }\n`\n\nconst BELIEF = gql`\n  query($_id: ID!) {\n    belief(_id: $_id) {\n      _id\n      order\n      title\n      image\n      declarations {\n        _id\n        order\n        text\n        verses {\n          _id\n          reference\n        }\n      }\n    }\n  }\n`\n\nexport default {\n  HOME,\n  BELIEF\n}\n","import React from 'react'\nimport { useQuery } from '@apollo/client'\n\nimport queries from './queries'\n\nexport default function useData(query, variables) {\n\n  return useQuery(queries[query], { variables })\n}\n","import React from 'react'\nimport { StatusBar, StyleSheet, View } from 'react-native'\nimport { useTheme } from 'react-native-paper'\n\nexport default function RootSurface({ children }) {\n\n  const { colors } = useTheme()\n\n  return (\n    <View style={[styles.container, { backgroundColor: colors.background }]}>\n      {children}\n      <StatusBar style=\"auto\" />\n    </View>\n  )\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n  },\n})\n","import React from 'react'\nimport { StyleSheet } from 'react-native'\nimport { Image } from 'react-native'\n\nexport default function BeliefImage({belief}) {\n\n  return (\n    <Image\n      source={{ uri: belief.image }}\n      style={styles.image}\n    />\n  )\n}\n\nconst styles = StyleSheet.create({\n  image: {\n    height: 29,\n    width: 55,\n    borderRadius: 2,\n  },\n})\n","import React from 'react'\nimport { List } from 'react-native-paper'\nimport { useNavigation } from '@react-navigation/native'\n\nimport BeliefImage from './BeliefImage'\n\nexport default function Belief({ belief }) {\n\n  const navigation = useNavigation()\n\n  return (\n    <List.Item\n      title={belief.title}\n      left={() => <BeliefImage belief={belief}/>}\n      onPress={() => navigation.navigate('Belief', { belief })}\n    />\n  )\n}\n","import React from 'react'\nimport { List } from 'react-native-paper'\n\nimport Belief from './Belief'\n\nexport default function Doctrine({ doctrine }) {\n\n  return (\n    <List.Section>\n      <List.Subheader>{doctrine.title.toUpperCase()}</List.Subheader>\n\n      {doctrine.beliefs && doctrine.beliefs.map(belief => (\n\n        <Belief\n          key={belief._id}\n          belief={belief}\n        />\n\n      ))}\n\n    </List.Section>\n  )\n}\n","import React from 'react'\nimport { ScrollView, Text } from 'react-native'\n\nimport useData from '../data/useData'\nimport RootSurface from '../shared/RootSurface'\n\nimport Doctrine from './Doctrine'\n\nexport default function Home() {\n\n  const { loading, error, data } = useData('HOME')\n\n  return (\n    <RootSurface>\n      <ScrollView>\n\n        {loading && <Text>Loading...</Text>}\n        {error && <Text>Error! ${error.message}</Text>}\n\n        {!loading && !error && data.doctrines.map(doctrine => (\n\n          <Doctrine\n            key={doctrine._id}\n            doctrine={doctrine}\n          />\n\n        ))}\n\n      </ScrollView>\n    </RootSurface>\n  )\n}\n","import React from 'react'\nimport { Dimensions, Image } from 'react-native'\n\nconst width = Dimensions.get('window').width\n\n\nexport default function BeliefImage({belief}) {\n\n  return (\n    <Image\n      style={{\n        width,\n        height: width * 8 / 15,\n      }}\n      source={{\n        uri: belief.image\n      }}\n    />\n  )\n}\n","import React from 'react'\nimport { Card, Paragraph } from 'react-native-paper'\n\nexport default function Declaration({declaration}) {\n\n  return (\n    <Card\n      key={declaration._id}\n    >\n      <Card.Content>\n        <Paragraph>\n          {declaration.text}\n        </Paragraph>\n      </Card.Content>\n    </Card>\n  )\n}\n","import React from 'react';\nimport { ScrollView, Text, View, StyleSheet } from 'react-native';\n\nimport useData from '../data/useData'\nimport RootSurface from '../shared/RootSurface'\n\nimport BeliefImage from './BeliefImage'\nimport Declaration from './Declaration'\n\nexport default function BeliefScreen({ theme, route }) {\n\n  const { belief } = route.params\n\n  const { loading, error, data } = useData('BELIEF', { _id: belief._id })\n\n  return (\n    <RootSurface>\n      <ScrollView>\n\n        {loading && <Text>Loading...</Text>}\n        {error && <Text>Error! ${error.message}</Text>}\n\n        {!loading && !error && data.belief && (\n\n          <View>\n\n            <BeliefImage belief={data.belief}/>\n\n            <View style={styles.declarationsContainer}>\n\n              {data.belief.declarations && data.belief.declarations.map(declaration => (\n                <Declaration\n                  key={declaration._id}\n                  declaration={declaration}\n                />\n              ))}\n\n            </View>\n\n          </View>\n        )}\n      </ScrollView>\n    </RootSurface>\n  );\n}\n\nconst styles = StyleSheet.create({\n  declarationsContainer: {\n    padding: 8,\n  }\n})\n","import React from 'react'\nimport { ApolloClient, InMemoryCache, ApolloProvider } from '@apollo/client'\nimport { NavigationContainer } from '@react-navigation/native'\nimport { createStackNavigator } from '@react-navigation/stack'\nimport 'react-native-gesture-handler'\nimport { Provider as PaperProvider } from 'react-native-paper'\n\nimport NavigationBar from './src/shared/NavigationBar'\nimport HomeScreen from './src/home/HomeScreen'\nimport BeliefScreen from './src/belief/BeliefScreen'\n\n// Initialize Apollo Client\nconst client = new ApolloClient({\n  uri: 'https://mediia-adventist-beliefs.glitch.me/',\n  cache: new InMemoryCache()\n})\n\n// Initialize main Stack Navigator\nconst Stack = createStackNavigator()\n\nexport default function App() {\n\n  return (\n    <PaperProvider>\n      <ApolloProvider client={client}>\n        <NavigationContainer>\n          <Stack.Navigator\n            initialRouteName=\"Home\"\n            screenOptions={{\n              header: (props) => <NavigationBar {...props} />\n            }}\n          >\n            <Stack.Screen name=\"Home\"\n              component={HomeScreen}\n              options={{ title: 'Adventist Beliefs' }}\n            />\n            <Stack.Screen name=\"Belief\"\n              component={BeliefScreen}\n              options={({ route }) => ({ title: route.params.belief.title })}\n            />\n          </Stack.Navigator>\n        </NavigationContainer>\n      </ApolloProvider>\n    </PaperProvider>\n  )\n}\n"],"sourceRoot":""}